// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: comments.sql

package db

import (
	"context"
	"database/sql"
)

const createComment = `-- name: createComment :one
INSERT INTO comments(
  post_id, user_id, content, likes,  parent_comment_id
) VALUES (
   $1, $2, $3, $4, $5
)RETURNING id, post_id, user_id, content, likes, created_at, parent_comment_id, depth, updated_at
`

type createCommentParams struct {
	PostID          int64         `json:"post_id"`
	UserID          int64         `json:"user_id"`
	Content         string        `json:"content"`
	Likes           int64         `json:"likes"`
	ParentCommentID sql.NullInt64 `json:"parent_comment_id"`
}

func (q *Queries) createComment(ctx context.Context, arg createCommentParams) (Comment, error) {
	row := q.db.QueryRowContext(ctx, createComment,
		arg.PostID,
		arg.UserID,
		arg.Content,
		arg.Likes,
		arg.ParentCommentID,
	)
	var i Comment
	err := row.Scan(
		&i.ID,
		&i.PostID,
		&i.UserID,
		&i.Content,
		&i.Likes,
		&i.CreatedAt,
		&i.ParentCommentID,
		&i.Depth,
		&i.UpdatedAt,
	)
	return i, err
}
